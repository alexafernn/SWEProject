Index: app/src/main/res/layout/confirm.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:background=\"@color/colorWhite\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:textSize=\"24sp\"\r\n        android:gravity=\"center\"\r\n        android:textColor=\"@color/colorBlack\"\r\n        android:text=\"Sitting Appointment Details: \"\r\n        android:id=\"@+id/label\"\r\n        android:layout_marginLeft=\"10dp\"\r\n        />\r\n\r\n    <TextView\r\n        android:id=\"@+id/start_date\"\r\n        android:layout_below=\"@id/label\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Start Date:\"\r\n        android:textColor=\"@color/colorBlack\"\r\n        android:gravity=\"center\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginLeft=\"10dp\"\r\n        />\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/start_date_label\"\r\n        android:layout_toEndOf=\"@+id/start_date\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:inputType=\"text\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_toRightOf=\"@+id/start_date\"\r\n        android:layout_alignRight=\"@id/start_date\"\r\n        android:layout_alignEnd=\"@id/confirm_availability_button2\"\r\n        android:layout_above=\"@id/end_date\"/>\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/end_date\"\r\n        android:layout_below=\"@id/start_date\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"End Date:\"\r\n        android:textColor=\"@color/colorBlack\"\r\n        android:gravity=\"center\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginLeft=\"10dp\"\r\n        />\r\n\r\n    <TextView\r\n        android:id=\"@+id/end_date_label\"\r\n        android:layout_toEndOf=\"@+id/end_date\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:inputType=\"text\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_toRightOf=\"@+id/end_date\"\r\n        android:layout_alignRight=\"@id/end_date\"\r\n        android:layout_alignEnd=\"@id/confirm_availability_button2\"\r\n        android:layout_above=\"@id/must_occur_at_my_location\"/>\r\n\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/must_occur_at_my_location\"\r\n        android:layout_below=\"@id/end_date\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Must Occur at My Location:\"\r\n        android:textColor=\"@color/colorBlack\"\r\n        android:gravity=\"center\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginLeft=\"10dp\"\r\n        />\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/must_occur_at_my_location_label\"\r\n        android:layout_toEndOf=\"@+id/must_occur_at_my_location\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:inputType=\"text\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_toRightOf=\"@+id/must_occur_at_my_location\"\r\n        android:layout_alignRight=\"@id/must_occur_at_my_location\"\r\n        android:layout_alignEnd=\"@id/confirm_availability_button2\"\r\n        android:layout_above=\"@id/notes_for_sitter\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/notes_for_sitter\"\r\n        android:layout_below=\"@id/must_occur_at_my_location\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Notes from Owner: \"\r\n        android:textColor=\"@color/colorBlack\"\r\n        android:gravity=\"center\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginLeft=\"10dp\"\r\n        />\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/notes_for_sitter_label\"\r\n        android:layout_toEndOf=\"@+id/notes_for_sitter\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:inputType=\"text\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_toRightOf=\"@+id/notes_for_sitter\"\r\n        android:layout_alignRight=\"@id/notes_for_sitter\"\r\n        android:layout_alignEnd=\"@id/confirm_availability_button2\"\r\n        android:layout_above=\"@id/view_pets_button2\"/>\r\n    <Button\r\n        android:id=\"@+id/confirm_availability_button2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/view_pets_button2\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:textColor=\"@color/colorWhite\"\r\n        android:text=\"Accept Sitting\"\r\n        android:onClick=\"onConfirm\"\r\n        android:layout_margin=\"10dp\"\r\n        />\r\n\r\n    <Button\r\n        android:id=\"@+id/cancel_button2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/confirm_availability_button2\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:textColor=\"@color/colorWhite\"\r\n        android:text=\"Ignore\"\r\n        android:onClick=\"onCancel\"\r\n        android:layout_margin=\"10dp\"\r\n        />\r\n\r\n    <Button\r\n    android:id=\"@+id/view_pets_button2\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_below=\"@id/notes_for_sitter\"\r\n    android:layout_marginTop=\"15dp\"\r\n    android:background=\"@color/colorPrimary\"\r\n    android:textColor=\"@color/colorWhite\"\r\n    android:text=\"View Pets\"\r\n    android:onClick=\"onViewSittingPets\"\r\n    android:layout_margin=\"10dp\"\r\n    />\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/confirm.xml	(revision 50bfc53f75501c05148791c57497bec2b2ee0434)
+++ app/src/main/res/layout/confirm.xml	(date 1607488402963)
@@ -133,7 +133,7 @@
         android:layout_height="wrap_content"
         android:layout_below="@id/confirm_availability_button2"
         android:layout_marginTop="15dp"
-        android:background="@color/colorPrimary"
+        android:background="#F13B14"
         android:textColor="@color/colorWhite"
         android:text="Ignore"
         android:onClick="onCancel"
Index: app/src/main/java/com/alexandrafernandez/sweproject/Intro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.alexandrafernandez.sweproject;\r\n\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.Resources;\r\nimport android.graphics.Point;\r\nimport android.os.Bundle;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\n/**\r\n * Intro Class\r\n * This class allows users to add pets to their profile\r\n * CS482 Software Engineering\r\n * Prof. Mehri\r\n * @author Jack Cannon\r\n * @author Alexandra Fernandez\r\n * @version 3.0 Final Release\r\n */\r\npublic class Intro extends AppCompatActivity {\r\n    /**\r\n     * Text Views for identifying field components\r\n     */\r\n    TextView greeting;\r\n\r\n    /**\r\n     * Buttons used to confirm data and/or move to another activity\r\n     */\r\n    Button owner, sitter;\r\n\r\n    /**\r\n     * Server interaction objects\r\n     */\r\n    SharedPreferences pref;\r\n    String clientID, clientAuth;\r\n\r\n    /**\r\n     * On Create Method\r\n     * Initializes the intro View and instantiates other view objects for later use\r\n     * @param savedInstanceState android system parameter\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        setTitle(\"HOME\");\r\n\r\n        //GET Request - get id/auth\r\n        pref = PreferenceManager.getDefaultSharedPreferences(this);\r\n        clientID = pref.getString(\"id\", \"\");\r\n        clientAuth = pref.getString(\"auth\", \"\");\r\n\r\n        //Url connection\r\n        UrlGet userInfo = new UrlGet(\"http://aiji.cs.loyola.edu/accountinfo?id=\" + clientID + \"&auth=\" + clientAuth ,\"profile.userInfo\", this);\r\n        userInfo.start();\r\n        try {\r\n            Thread.sleep(500);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        //Save response\r\n        String json = pref.getString(\"profile.userInfo\", \"\");\r\n        Log.w(\"MA\", \"json: \" + json);\r\n        boolean is_owner=false, is_sitter=false;\r\n        String first_name=\"\";\r\n        try {\r\n            JSONObject jsonObject1 = new JSONObject(json);\r\n            first_name = jsonObject1.getString( \"first_name\" );\r\n        } catch( JSONException json_e ) {\r\n            Log.w(\"MA\", json_e.toString());\r\n        }\r\n\r\n        ScreenSize view = new ScreenSize(this);\r\n\r\n        //String greetMe = \"Hi, \" + myName;\r\n        String greetMe = \"HI \" + first_name.toUpperCase() + \"!\";\r\n        greeting = (TextView) findViewById(R.id.greeting);\r\n        greeting.setText(greetMe);\r\n        greeting.setTextSize(view.getLabelTextSize());\r\n\r\n        boolean own = pref.getBoolean(\"ownerSwitchChecked\", true);\r\n        boolean sit = pref.getBoolean(\"sitterSwitchChecked\", true);\r\n        Log.w(\"MA\", sit + \" \" + own);\r\n\r\n        owner = findViewById(R.id.owner_main_button); //i need a sitter\r\n        owner.setTextSize(view.getButtonTextSize());\r\n\r\n        if(pref.getBoolean(\"ownerSwitchChecked\", true))\r\n            owner.setVisibility(View.VISIBLE);\r\n        else owner.setVisibility(View.INVISIBLE);\r\n\r\n        sitter = findViewById(R.id.sitter_main_button); //i want to sit\r\n        sitter.setTextSize(view.getButtonTextSize());\r\n\r\n        if(pref.getBoolean(\"sitterSwitchChecked\", true))\r\n            sitter.setVisibility(View.VISIBLE);\r\n        else sitter.setVisibility(View.INVISIBLE);\r\n    }\r\n\r\n    /**\r\n     * On Restart method\r\n     * Called only when re-starting an activity\r\n     */\r\n    @Override\r\n    protected void onRestart() {\r\n        super.onRestart();\r\n        finish();\r\n        startActivity(getIntent());\r\n    }\r\n\r\n    /**\r\n     * on Create Options Menu\r\n     * Initialize and connect the menu for this class\r\n     * @param menu the appropriate menu object for this view (app_menu.xml)\r\n     * @return true if successful creation of menu\r\n     */\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.app_menu, menu);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * On Options Item Selected method\r\n     * @param item the option selected by the user\r\n     * @return true once an action is taken regarding this selection\r\n     */\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.action_favorite:\r\n                if(pref.getBoolean(\"ownerSwitchChecked\", true) && !pref.getBoolean(\"sitterSwitchChecked\", true))\r\n                    startActivity(new Intent(Intro.this, sittingsForMyPet.class));\r\n\r\n                else if(pref.getBoolean(\"sitterSwitchChecked\", true) && !pref.getBoolean(\"ownerSwitchChecked\", true))\r\n                    startActivity(new Intent(Intro.this, HomeActivity.class));\r\n\r\n                else {\r\n                    DialogInterface.OnClickListener dClickListener = new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int choice) {\r\n                            switch (choice) {\r\n                                case DialogInterface.BUTTON_POSITIVE:\r\n                                    startActivity(new Intent(Intro.this, HomeActivity.class)); // i am sitter\r\n                                    break;\r\n                                case DialogInterface.BUTTON_NEGATIVE:\r\n                                    startActivity(new Intent(Intro.this, sittingsForMyPet.class)); // i am owner\r\n                            }\r\n                        }\r\n                    };\r\n                    AlertDialog.Builder builder = new AlertDialog.Builder(Intro.this);\r\n                    builder.setMessage(\"Which sitting appointments would you like to see?\").setPositiveButton(\"I'm a Sitter\", dClickListener).setNegativeButton(\"I'm an Owner\", dClickListener).show();\r\n                }\r\n                return true;\r\n            case R.id.profile:\r\n                startActivity(new Intent(this, Profile.class));\r\n                return true;\r\n            case R.id.feedback:\r\n                startActivity(new Intent(this, Feedback.class));\r\n                return true;\r\n            case R.id.logout:\r\n                SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(this);\r\n                SharedPreferences.Editor editor = pref.edit();\r\n                editor.putBoolean(\"loginSwitchChecked\", false);\r\n                editor.apply();\r\n                startActivity(new Intent(this, MainActivity.class));\r\n                //clear all profile data\r\n\r\n                finish();\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To Owner Profile method\r\n     * Sends to owner activity\r\n     * @param view the reference object calling this method\r\n     */\r\n    public void toOwnerProfile(View view) {\r\n        startActivity(new Intent(this, Owner.class));\r\n        //startActivity(new Intent (this, OwnerSittings.class));\r\n    }\r\n\r\n    /**\r\n     * To Sitter Profile method\r\n     * Sends to sitter activity\r\n     * @param view the reference object calling this method\r\n     */\r\n    public void toSitterProfile(View view)\r\n    {\r\n        //startActivity(new Intent(this, SitterSittings.class));\r\n        startActivity(new Intent(this, Sitter.class));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/alexandrafernandez/sweproject/Intro.java	(revision 50bfc53f75501c05148791c57497bec2b2ee0434)
+++ app/src/main/java/com/alexandrafernandez/sweproject/Intro.java	(date 1607489052483)
@@ -156,7 +156,7 @@
                         public void onClick(DialogInterface dialog, int choice) {
                             switch (choice) {
                                 case DialogInterface.BUTTON_POSITIVE:
-                                    startActivity(new Intent(Intro.this, HomeActivity.class)); // i am sitter
+                                    startActivity(new Intent(Intro.this, SitterAccepted.class)); // i am sitter
                                     break;
                                 case DialogInterface.BUTTON_NEGATIVE:
                                     startActivity(new Intent(Intro.this, sittingsForMyPet.class)); // i am owner
Index: app/src/main/java/com/alexandrafernandez/sweproject/SitterSitting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.alexandrafernandez.sweproject;\r\n\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.w3c.dom.Text;\r\n\r\n\r\npublic class SitterSitting extends AppCompatActivity\r\n{\r\n    /**\r\n     * Text Views for identifying field components\r\n     */\r\n    TextView textViewStartDateLabel, textViewEndDateLabel, textViewAllMyPetsLabel, textViewMustOccurAtOwnerLocationLabel,\r\n             textViewNotesFromOwnerLabel, textViewStartDate, textViewEndDate, textViewAllMyPets, textViewMustOccurAtOwnerLocation,\r\n             textViewNotesFromOwner;\r\n\r\n    /**\r\n     * Buttons used to confirm data and/or move to another activity\r\n     */\r\n    Button buttonConfirm, buttonCancel, buttonViewPets;\r\n\r\n\r\n    /**\r\n     * Server interaction objects\r\n     */\r\n    SharedPreferences pref;\r\n    String clientID, clientAuth, job_id;\r\n\r\n\r\n    /**\r\n     * On Create Method\r\n     * Initializes the  View\r\n     * @param savedInstanceState android system parameter\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.confirm);\r\n        setTitle(\"Approve Sitting\");\r\n\r\n        ScreenSize view  = new ScreenSize(this);\r\n\r\n        //setting up buttons\r\n        buttonConfirm = (Button) findViewById(R.id.confirm_availability_button2);\r\n        buttonConfirm.setTextSize(view.getButtonTextSize());\r\n\r\n        buttonCancel = (Button) findViewById(R.id.cancel_button2);\r\n        buttonCancel.setTextSize(view.getButtonTextSize());\r\n\r\n        buttonViewPets = (Button) findViewById(R.id.view_pets_button2);\r\n        buttonViewPets.setTextSize(view.getButtonTextSize());\r\n\r\n\r\n        //setting up textViews\r\n\r\n\r\n        textViewNotesFromOwnerLabel = (TextView) findViewById(R.id.notes_for_sitter);\r\n       // textViewNotesFromOwnerLabel.setTextSize(view.getLabelTextSize());\r\n\r\n        //exist\r\n        textViewStartDateLabel = (TextView) findViewById(R.id.start);\r\n        //textViewStartDateLabel.setTextSize(view.getLabelTextSize());\r\n\r\n        //exist\r\n        textViewStartDate = (TextView) findViewById(R.id.start_date_label);\r\n        //textViewStartDate.setTextSize(view.getLabelTextSize());\r\n\r\n        //exist\r\n        textViewEndDateLabel = (TextView) findViewById(R.id.end);\r\n       // textViewEndDateLabel.setTextSize(view.getLabelTextSize());\r\n\r\n        //exist\r\n        textViewEndDate = (TextView) findViewById(R.id.end_date_label);\r\n        //textViewEndDate.setTextSize(view.getLabelTextSize());\r\n\r\n        //exist\r\n        textViewMustOccurAtOwnerLocation = (TextView) findViewById(R.id.must_occur_at_my_location_label);\r\n       // textViewMustOccurAtOwnerLocation.setTextSize(view.getLabelTextSize());\r\n\r\n        textViewMustOccurAtOwnerLocationLabel = (TextView) findViewById(R.id.must_occur_at_my_location);\r\n        //textViewMustOccurAtOwnerLocationLabel.setTextSize(view.getLabelTextSize());\r\n\r\n\r\n        textViewNotesFromOwner = (TextView) findViewById(R.id.notes_for_sitter_label);\r\n        //textViewNotesFromOwner.setTextSize(view.getLabelTextSize());\r\n\r\n//        textViewAllMyPets = (TextView) findViewById(R.id.all_my_pet_label);\r\n//        textViewAllMyPets.setTextSize(view.getLabelTextSize());\r\n\r\n        //TODO get from server\r\n        /**Things commented out are so it can work without server connection**/\r\n\r\n        //GET Request - get id/auth\r\n        pref = PreferenceManager.getDefaultSharedPreferences(this);\r\n        clientID = pref.getString(\"id\", \"\");\r\n        clientAuth = pref.getString(\"auth\", \"\");\r\n\r\n        job_id = getIntent().getStringExtra(\"job_id\");\r\n\r\n        String startDateTime = \"\", endDateTime = \"\", details =\"\";\r\n        boolean success = false, is_at_owner = false;\r\n        float lat=0, lon=0;\r\n\r\n        //Url connection\r\n        UrlGet userInfo = new UrlGet(\"http://aiji.cs.loyola.edu/jobinfo?id=\" + clientID + \"&auth=\" + clientAuth + \"&job_id=\" + job_id, \"requests.list\", this);\r\n        userInfo.start();\r\n        try {\r\n            Thread.sleep(500);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        String json = pref.getString(\"requests.list\", \"\");\r\n        try {\r\n            JSONObject jsonObject = new JSONObject(json);\r\n            is_at_owner = jsonObject.getBoolean(\"is_at_owner\");\r\n            if(is_at_owner== true)\r\n            {\r\n                textViewMustOccurAtOwnerLocation.setText(\"true\");\r\n            }\r\n            else\r\n            {\r\n                textViewMustOccurAtOwnerLocation.setText(\"false\");\r\n            }\r\n            startDateTime = jsonObject.getString(\"start_datetime\");\r\n            textViewStartDate.setText(startDateTime);\r\n            endDateTime = jsonObject.getString(\"end_datetime\");\r\n            textViewEndDate.setText(endDateTime);\r\n            details = jsonObject.getString(\"details\");\r\n            textViewNotesFromOwner.setText(details);\r\n\r\n        } catch (JSONException json_e) {\r\n            Log.w(\"MA\", json_e.toString());\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Go to sittins requested method\r\n     * After saving data to device/server, returns to main mySittings (for sitter) view\r\n     * @param v the reference object calling this method\r\n     */\r\n    public void onConfirm(View v)\r\n    {\r\n        final Intent i = new Intent(this, SitterSittings.class);\r\n\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Accept Job\")\r\n                .setMessage(\"Are you sure you want to accept this job?\")\r\n                .setPositiveButton(\"Accept\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n\r\n                        JSONObject data = new JSONObject();\r\n                        try {\r\n                            data.put(\"id\", clientID);\r\n                            data.put(\"auth\", clientAuth);\r\n                            data.put(\"job_id\", job_id);\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                        UrlPost saveInfo = new UrlPost(\"http://aiji.cs.loyola.edu/jobaccept\", data.toString(), getContext(),\"job.accept\");\r\n                        saveInfo.start();\r\n\r\n                        //give persistent data time to write\r\n                        try {\r\n                            Thread.sleep(500);\r\n                        } catch (InterruptedException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                        //check response\r\n                        String response = pref.getString(\"job.accept\", \"\");\r\n                        boolean success = false;\r\n                        try {\r\n                            JSONObject jsonObject1 = new JSONObject(response);\r\n                            success = jsonObject1.getBoolean(\"success\");\r\n                        } catch( JSONException json_e ) {\r\n                            if(!success) {\r\n                                //showError();\r\n                                //return;\r\n                            }\r\n                        }\r\n                        startActivity(i);\r\n                        finish();\r\n                    }\r\n                })\r\n\r\n                .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n\r\n                    }\r\n                })\r\n                .setIcon(android.R.drawable.ic_menu_save)\r\n                .show();\r\n    }\r\n\r\n\r\n    /**\r\n     * Go to sittins requested method\r\n     * dont save anything to server, returns to main mySittings (for sitter) view\r\n     * @param v the reference object calling this method\r\n     */\r\n    public void onCancel(View v)\r\n    {\r\n\r\n        final Intent i = new Intent(this, SitterSittings.class);\r\n\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Un-Accept Job\")\r\n                .setMessage(\"Are you sure you want to ignore this job?\")\r\n                .setPositiveButton(\"Un-Accept\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n\r\n                        JSONObject data = new JSONObject();\r\n                        try {\r\n                            data.put(\"id\", clientID);\r\n                            data.put(\"auth\", clientAuth);\r\n                            data.put(\"job_id\", job_id);\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                        UrlDelete saveInfo = new UrlDelete(\"http://aiji.cs.loyola.edu/jobunaccept\", data.toString(), \"job.unaccept\", getContext());\r\n                        saveInfo.start();\r\n\r\n                        //give persistent data time to write\r\n                        try {\r\n                            Thread.sleep(500);\r\n                        } catch (InterruptedException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                        //check response\r\n                        String response = pref.getString(\"job.unaccept\", \"\");\r\n                        boolean success = false;\r\n                        try {\r\n                            JSONObject jsonObject1 = new JSONObject(response);\r\n                            success = jsonObject1.getBoolean(\"success\");\r\n                        } catch( JSONException json_e ) {\r\n                            if(!success) {\r\n                                //showError();\r\n                                //return;\r\n                            }\r\n                        }\r\n                        startActivity(i);\r\n                        finish();\r\n                    }\r\n                })\r\n\r\n                .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n\r\n                    }\r\n                })\r\n                .setIcon(android.R.drawable.ic_menu_delete)\r\n                .show();\r\n    }\r\n\r\n    /**\r\n     * Go to view pets in sitting view\r\n     * dont save anything to server, goes to pets in sitting view\r\n     * @param v the reference object calling this method\r\n     */\r\n    public void onViewSittingPets(View v)\r\n    {\r\n        Intent i= new Intent(this, petsSittingList.class); //TODO: fix petSittingList to account with server and show properly\r\n        startActivity(i);\r\n    }\r\n\r\n\r\n    /**\r\n     * Get context\r\n     * @return the activity\r\n     */\r\n    public Context getContext()\r\n    {\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/alexandrafernandez/sweproject/SitterSitting.java	(revision 50bfc53f75501c05148791c57497bec2b2ee0434)
+++ app/src/main/java/com/alexandrafernandez/sweproject/SitterSitting.java	(date 1607488225411)
@@ -10,14 +10,12 @@
 import android.view.View;
 import android.widget.Button;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 
 import org.json.JSONException;
 import org.json.JSONObject;
-import org.w3c.dom.Text;
 
 
 public class SitterSitting extends AppCompatActivity
@@ -161,7 +159,7 @@
      */
     public void onConfirm(View v)
     {
-        final Intent i = new Intent(this, SitterSittings.class);
+        final Intent i = new Intent(this, SitterAccepted.class);
 
         new AlertDialog.Builder(this)
                 .setTitle("Accept Job")
@@ -223,7 +221,7 @@
     public void onCancel(View v)
     {
 
-        final Intent i = new Intent(this, SitterSittings.class);
+        final Intent i = new Intent(this, SitterAccepted.class);
 
         new AlertDialog.Builder(this)
                 .setTitle("Un-Accept Job")
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.alexandrafernandez.sweproject\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n\r\n    <application\r\n        android:usesCleartextTraffic=\"true\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/logo\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/logo\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".MainActivity\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".Intro\"/>\r\n        <activity android:name=\".HomeActivity\" />\r\n        <activity android:name=\".sittingsForMyPet\"/>\r\n        <activity android:name=\".Profile\" />\r\n        <activity android:name=\".Sitter\" />\r\n        <activity android:name=\".Owner\" />\r\n        <activity android:name=\".Pets\" />\r\n        <activity android:name=\".Pet\" />\r\n        <activity android:name=\".Subscription\" />\r\n        <activity android:name=\".PastSittings\" />\r\n        <activity android:name=\".Feedback\" />\r\n        <activity android:name=\".Rewards\" />\r\n        <activity android:name=\".SitterAvailability\" />\r\n        <activity android:name=\".NeedSitterEvent\" />\r\n        <activity android:name=\".approveSitting\" />\r\n        <activity android:name=\".SitterAvailabilityEvent\" />\r\n        <activity android:name=\".SignUp\"/>\r\n        <activity android:name=\".ViewSitting\"/>\r\n        <activity android:name=\".petsSittingList\"/>\r\n        <activity android:name=\".petBeingSat\"/>\r\n        <activity android:name=\".OwnerSitting\"/>\r\n        <activity android:name=\".OwnerSittings\"/>\r\n        <activity android:name=\".SitterSitting\"/>\r\n        <activity android:name=\".SitterSittings\"/>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 50bfc53f75501c05148791c57497bec2b2ee0434)
+++ app/src/main/AndroidManifest.xml	(date 1607488225421)
@@ -45,7 +45,7 @@
         <activity android:name=".OwnerSitting"/>
         <activity android:name=".OwnerSittings"/>
         <activity android:name=".SitterSitting"/>
-        <activity android:name=".SitterSittings"/>
+        <activity android:name=".SitterAccepted"/>
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/alexandrafernandez/sweproject/Sitter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.alexandrafernandez.sweproject;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.os.Bundle;\r\nimport android.os.Parcelable;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.util.TypedValue;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\n\r\n/**\r\n * Sitter Class\r\n * This class allows a sitter to perform actions sitters must access\r\n * CS482 Software Engineering\r\n * Prof. Mehri\r\n * @author Jack Cannon\r\n * @author Alexandra Fernandez\r\n * @version 3.0 Final Release\r\n */\r\npublic class Sitter extends AppCompatActivity implements LocationListener {\r\n\r\n    /**\r\n     * List managing the sittings nearby owners have requested\r\n     */\r\n    ArrayList<Sitting> sittingList;\r\n\r\n    /**\r\n     * List View for managing multiple content instances of sitting requests\r\n     */\r\n    ListView sittings_listView;\r\n\r\n    /**\r\n     * Event to be selected and accessed after assignment\r\n     */\r\n    Sitting event;\r\n\r\n    /**\r\n     * Activity and View data\r\n     */\r\n    private Context context;\r\n\r\n    Location location;\r\n\r\n    /**\r\n     * Server interaction objects\r\n     */\r\n    SharedPreferences pref;\r\n    String clientID, clientAuth, job_id;\r\n\r\n    /**\r\n     * On Create Method\r\n     * Initializes the sitter View and instantiates other view objects for later use\r\n     * @param savedInstanceState android system parameter\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.sitter);\r\n        setTitle(\"SITTER\");\r\n\r\n        /*\r\n        Bundle b;\r\n        final Sitting[] sitting = {MainActivity.sitting};\r\n\r\n        if (sitting[0].getNumberOfSittings() == 0)\r\n        {\r\n            Toast.makeText(getApplicationContext(),\"No reservations open for sitting\",Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n         */\r\n\r\n        //GET Request - get id/auth\r\n        pref = PreferenceManager.getDefaultSharedPreferences(this);\r\n        clientID = pref.getString(\"id\", \"\");\r\n        clientAuth = pref.getString(\"auth\", \"\");\r\n\r\n        location = new Location(\"\");\r\n\r\n        //Url connection\r\n        UrlGet userInfo = new UrlGet(\"http://aiji.cs.loyola.edu/jobsearch?id=\" + clientID + \"&auth=\" + clientAuth + \"&lat=\" + location.getLatitude() + \"&lon=\" + location.getLongitude(),\"available.sitter\" , this);\r\n        userInfo.start();\r\n        try {\r\n            Thread.sleep(500);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        sittingList = new ArrayList<Sitting>();\r\n        boolean success = false;\r\n\r\n        //Save response\r\n        String json = pref.getString(\"available.sitter\", \"\");\r\n        String id=\"\", startDateTime=\"\", endDateTime=\"\", ownerName=\"\";\r\n        JSONObject jobData;\r\n        try {\r\n            JSONObject jsonObject = new JSONObject(json);\r\n            Iterator<String> keys = jsonObject.keys();\r\n            while(keys.hasNext()) {\r\n                id = keys.next();\r\n                if(!id.equals(\"success\")) {\r\n                    jobData = jsonObject.getJSONObject(id);\r\n                    ownerName = jobData.getString(\"owner_name\");\r\n                    startDateTime = jobData.getString(\"start_datetime\");\r\n                    endDateTime = jobData.getString(\"end_datetime\");\r\n                    sittingList.add(new Sitting(startDateTime, endDateTime, ownerName, id));\r\n                }\r\n\r\n            }\r\n        } catch( JSONException json_e ) {\r\n            Log.w(\"MA\", json_e.toString());\r\n        }\r\n\r\n        if(!success) {\r\n            Toast.makeText(this, \"No sittings found.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n        context = this;\r\n\r\n\r\n        ArrayAdapter<Sitting> adapter = new ArrayAdapter<Sitting>(this, android.R.layout.simple_list_item_1, sittingList)\r\n        {\r\n                @Override\r\n                public View getView(int position, View convertView, ViewGroup parent)\r\n                {\r\n                    TextView textView = (TextView) super.getView(position, convertView, parent);\r\n                    textView.setTextColor(Color.WHITE);\r\n                    textView.setTypeface(textView.getTypeface(), Typeface.BOLD);\r\n                    textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 22);\r\n                    return textView;\r\n\r\n                }\r\n        };\r\n\r\n        sittings_listView = (ListView) findViewById(R.id.sitting2_listview);\r\n        sittings_listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                event = sittingList.get(i);\r\n\r\n                Intent intent = new Intent(context, SitterSitting.class);\r\n                intent.putExtra(\"job_id\", event.id);\r\n                Log.w(\"MA\", \"----------------------Event ID: \" + event.id);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n        sittings_listView.setAdapter(adapter);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * on Create Options Menu\r\n     * Initialize and connect the menu for this class\r\n     * @param menu the appropriate menu object for this view (sitter_menu.xml)\r\n     * @return true if successful creation of menu\r\n     */\r\n    public boolean onCreateOptionsMenu(Menu menu)\r\n    {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.sitter_menu, menu);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * On Options Item Selected method\r\n     * @param item the option selected by the user\r\n     * @return true once an action is taken regarding this selection\r\n     */\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.home:\r\n                finish();\r\n                return true;\r\n            case R.id.action_favorite:\r\n                startActivity(new Intent(this, HomeActivity.class));\r\n                return true;\r\n            case R.id.rewards_menu:\r\n                startActivity(new Intent(this, Rewards.class));\r\n                return true;\r\n            case R.id.past_sittings_menu:\r\n                startActivity(new Intent(this, PastSittings.class));\r\n                return true;\r\n            case R.id.feedback_menu:\r\n                startActivity(new Intent(this, Feedback.class));\r\n                return true;\r\n            case R.id.sitter_Availability:\r\n                startActivity(new Intent(this, SitterAvailability.class));\r\n\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onLocationChanged(Location location) {\r\n        this.location = location;\r\n    }\r\n\r\n    @Override\r\n    public void onStatusChanged(String s, int i, Bundle bundle) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onProviderEnabled(String s) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onProviderDisabled(String s) {\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/alexandrafernandez/sweproject/Sitter.java	(revision 50bfc53f75501c05148791c57497bec2b2ee0434)
+++ app/src/main/java/com/alexandrafernandez/sweproject/Sitter.java	(date 1607488934154)
@@ -196,7 +196,7 @@
                 finish();
                 return true;
             case R.id.action_favorite:
-                startActivity(new Intent(this, HomeActivity.class));
+                startActivity(new Intent(this, SitterAccepted.class));
                 return true;
             case R.id.rewards_menu:
                 startActivity(new Intent(this, Rewards.class));
Index: app/src/main/java/com/alexandrafernandez/sweproject/SitterSittings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.alexandrafernandez.sweproject;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.os.Bundle;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.util.TypedValue;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\n\r\npublic class SitterSittings extends AppCompatActivity\r\n{\r\n    /**\r\n     * List managing the sittings the sitter has\r\n     */\r\n    ArrayList<SitterSittingData> sitterSittingList;\r\n\r\n    /**\r\n     * List View for managing multiple instance of an sitterSitting\r\n     */\r\n    ListView sitterSitting_listview;\r\n\r\n    /**\r\n     *  Sitter Sitting information to be selected and accessed after request\r\n     */\r\n    SitterSittingData sitterSitting;\r\n\r\n    /** Activity and View data\r\n     */\r\n    private Context context;\r\n\r\n    /**\r\n     * Text Views for identifying field components\r\n     */\r\n    TextView textViewNoCurrentSittings;\r\n\r\n    /**\r\n     * Server interaction objects\r\n     */\r\n    SharedPreferences pref;\r\n    String clientID, clientAuth;\r\n\r\n\r\n    /**\r\n     * On Create Method\r\n     * Initializes the ownerSittings View and instantiates other view objects for later use\r\n     * @param savedInstanceState\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState)\r\n    {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.current_sittings);\r\n        setTitle(\"SITTER SITTINGS\");\r\n\r\n        //GET Request - get id/auth\r\n        pref = PreferenceManager.getDefaultSharedPreferences(this);\r\n        clientID = pref.getString(\"id\", \"\");\r\n        clientAuth = pref.getString(\"auth\", \"\");\r\n\r\n        //Url connection\r\n        UrlGet userInfo = new UrlGet(\"http://aiji.cs.loyola.edu/sitterjoblist?id=\" + clientID + \"&auth=\" + clientAuth + \"&is_canceled=\" + false,\"requests.list\", this);\r\n        userInfo.start();\r\n        try {\r\n            Thread.sleep(1000);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        sitterSittingList = new ArrayList<SitterSittingData>();\r\n\r\n        Log.w(\"MA\", \"CREATED OWNER\");\r\n\r\n        //Save response\r\n        String json = pref.getString(\"requests.list\", \"\");\r\n\r\n        String startDateTime = \"\", endDateTime = \"\", details =\"\", id=\"\", ownerName =\"\";\r\n        boolean success = false, is_at_owner = false;\r\n        float lat=0, lon=0;\r\n\r\n        JSONObject jobData;\r\n        try {\r\n            JSONObject jsonObject = new JSONObject(json);\r\n            Iterator<String> keys = jsonObject.keys();\r\n            while(keys.hasNext()) {\r\n                id = keys.next();\r\n                if(!id.equals(\"success\")) {\r\n                    jobData = jsonObject.getJSONObject(id);\r\n                    startDateTime = jobData.getString(\"start_datetime\");\r\n                    endDateTime = jobData.getString(\"end_datetime\");\r\n                    ownerName =jobData.getString(\"owner_name\");\r\n                    sitterSittingList.add(new SitterSittingData(startDateTime, endDateTime, id, ownerName)); //TODO finish the rest of this class\r\n                }\r\n                else success = true;\r\n            }\r\n        } catch( JSONException json_e ) {\r\n            Log.w(\"MA\", json_e.toString());\r\n        }\r\n\r\n        if(!success) {\r\n            Toast.makeText(this, \"No sittings found.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        sitterSitting_listview = (ListView) findViewById(R.id.sitting_listview);\r\n        //sitterSitting_listview.setVisibility(View.INVISIBLE); /** FOR NOW, But after it will check if they are sittigns and base visibility on that **/\r\n\r\n\r\n        /** Currently commented out so it can work with not server connection  **/\r\n        ArrayAdapter<SitterSittingData> adapter = new ArrayAdapter<SitterSittingData>(this, android.R.layout.simple_expandable_list_item_1,sitterSittingList)\r\n        {\r\n        @Override\r\n           public View getView(int position, View convertView, ViewGroup parent)\r\n            {\r\n                TextView textView = (TextView) super.getView(position, convertView, parent);\r\n                textView.setTextColor(Color.WHITE);\r\n                textView.setTypeface(textView.getTypeface(), Typeface.BOLD);\r\n                textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,22);\r\n                return textView;\r\n            }\r\n        };\r\n        sitterSitting_listview.setAdapter(adapter);\r\n\r\n        context=this;\r\n\r\n        /** Currently commented out so it can work with not server connection  **/\r\n        sitterSitting_listview.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                sitterSitting = sitterSittingList.get(position);\r\n\r\n                Intent intent = new Intent(context, SitterSitting.class);\r\n                intent.putExtra(\"sitter_sitting_id\", sitterSitting.sittingID);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        ScreenSize view = new ScreenSize(this);\r\n        textViewNoCurrentSittings = (TextView) findViewById(R.id.noSittings);\r\n        textViewNoCurrentSittings.setTextSize(view.getLabelTextSize());\r\n\r\n        //TODO if there are no current sittines show textViewNoCurrentSittings and make the list view invisible\r\n    }\r\n\r\n\r\n    /**\r\n     * Request toSit Event method\r\n     * Performs appropriate actions and completes activity\r\n     * @param view the reference object calling this method\r\n     */\r\n    public void onRequestSitterEvent(View view) {\r\n        startActivity(new Intent(this, SitterSitting.class));\r\n        finish();\r\n    }\r\n\r\n    /**\r\n     * on Create Options Menu\r\n     * Initialize and connect the menu for this class\r\n     * @param menu the appropriate menu object for this view (sitter_menu.xml)\r\n     * @return true if successful creation of menu\r\n     */\r\n    public boolean onCreateOptionsMenu(Menu menu)\r\n    {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.sitter_menu, menu);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * On Options Item Selected method\r\n     * @param item the option selected by the user\r\n     * @return true once an action is taken regarding this selection\r\n     */\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.home:\r\n                finish();\r\n                return true;\r\n            case R.id.action_favorite:\r\n                startActivity(new Intent(this, HomeActivity.class));\r\n                return true;\r\n            case R.id.rewards_menu:\r\n                startActivity(new Intent(this, Rewards.class));\r\n                return true;\r\n            case R.id.past_sittings_menu:\r\n                startActivity(new Intent(this, PastSittings.class));\r\n                return true;\r\n            case R.id.feedback_menu:\r\n                startActivity(new Intent(this, Feedback.class));\r\n                return true;\r\n            case R.id.sitter_Availability:\r\n                startActivity(new Intent(this, SitterAvailability.class));\r\n\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n\r\n    //textViewNoCurrentSittings.setTextSize(view.getLabelTextSize());\r\n}\r\n
===================================================================
--- app/src/main/java/com/alexandrafernandez/sweproject/SitterSittings.java	(revision 50bfc53f75501c05148791c57497bec2b2ee0434)
+++ app/src/main/java/com/alexandrafernandez/sweproject/SitterAccepted.java	(date 1607489153669)
@@ -28,7 +28,7 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 
-public class SitterSittings extends AppCompatActivity
+public class SitterAccepted extends AppCompatActivity
 {
     /**
      * List managing the sittings the sitter has
@@ -72,7 +72,7 @@
 
         super.onCreate(savedInstanceState);
         setContentView(R.layout.current_sittings);
-        setTitle("SITTER SITTINGS");
+        setTitle("ACCEPTED SITTINGS");
 
         //GET Request - get id/auth
         pref = PreferenceManager.getDefaultSharedPreferences(this);
@@ -110,7 +110,7 @@
                     startDateTime = jobData.getString("start_datetime");
                     endDateTime = jobData.getString("end_datetime");
                     ownerName =jobData.getString("owner_name");
-                    sitterSittingList.add(new SitterSittingData(startDateTime, endDateTime, id, ownerName)); //TODO finish the rest of this class
+                    sitterSittingList.add(new SitterSittingData(id, startDateTime, endDateTime, ownerName)); //TODO finish the rest of this class
                 }
                 else success = true;
             }
@@ -154,7 +154,7 @@
                 sitterSitting = sitterSittingList.get(position);
 
                 Intent intent = new Intent(context, SitterSitting.class);
-                intent.putExtra("sitter_sitting_id", sitterSitting.sittingID);
+                intent.putExtra("job_id", sitterSitting.sittingID);
                 startActivity(intent);
                 finish();
             }
